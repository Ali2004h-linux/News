@model News.ViewModel.Account.Login.LoginViewModel

@{
    ViewData["Title"] = "ورود";

}


<h4>ورود</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Login" asp-route-returnUrl=@ViewData["returnUrl"] method="post">
            <div asp-validation-summary="ModelOnly" class="text-black"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Remem" class="control-label"></label>
                <input asp-for="Remem" class="form-control" />
                <span asp-validation-for="Remem" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="ورود" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @if (ViewData["ErrorMessage"] != null)
    {
        <script>
                    swal('@ViewData["ErrorMessage"]', "", '@ViewData["mode"]');
        </script>
    }
}}
